apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
kotlin {
    jvm()
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
    }
}
dependencies {
    commonMainImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
    commonMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
    commonMainImplementation "org.kodein.di:kodein-di-core:$kodein_version"
    commonMainImplementation "org.kodein.di:kodein-di-erased:$kodein_version"
    commonMainImplementation "io.ktor:ktor-client-core:$ktor_version"
    commonMainImplementation "io.ktor:ktor-client-json:$ktor_version"
    commonMainImplementation "io.ktor:ktor-client-serialization:$ktor_version"

    jvmMainImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    jvmMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    jvmMainImplementation "org.kodein.di:kodein-di-erased-jvm:$kodein_version"
    jvmMainImplementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    jvmMainImplementation "io.ktor:ktor-client-okhttp:$ktor_version"
    jvmMainImplementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    jvmMainImplementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
}
// Workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
}